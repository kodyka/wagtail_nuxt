version: "3.9"
services:

  backend:
    restart: unless-stopped     
    build: ./backend/
    volumes:
      # This mounts local ./backend for applying changes in Wagtail!
      - ./backend:/app
    ports:
      - "7999:7999"
    command: ["./docker-entrypoint.sh"]
    # network_mode: "host" # vite proxy fails with error 500 without host network
    environment:
      - MODE=dev
      - DEBUG=true
      - PYTHONUNBUFFERED=1
      - POSTGRES_DB=vas3k_club
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - REDIS_DB=0
      - REDIS_HOST=redis   
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      queue:
        condition: service_started
    # network_mode: "host"
  frontend:
    restart: unless-stopped    
    build: ./frontend/
    volumes:
      # This mounts local ./frontend for applying changes in NuxtJS!
      - ./frontend:/usr/src/nuxt-app
    ports:
      - "8000:8000"
      - "24678:24678"
    command: [sh, -c, "npm install && npm run dev"]
    environment:
      - API_URL="http://localhost:7999"     
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_started
    # network_mode: "host" # vite proxy fails with error 500 without host network

  queue:
    restart: unless-stopped  
    build: ./backend/
    command: ["./docker-entrypoint-queue.sh"]
    environment:
      - MODE=dev
      - DEBUG=true
      - PYTHONUNBUFFERED=1
      - POSTGRES_DB=vas3k_club
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - REDIS_DB=0
      - REDIS_HOST=redis
    volumes:
      - ./backend:/app:delegated
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  # cron:
  #   build: ./backend/
  #   command: ["./docker-entrypoint-queue.sh"]
  #   container_name: club_cron
  #   depends_on:
  #     - club_app
  #     - postgres
  #     - redis
  #   ports: []

  db:
    restart: always
    image: postgres:14
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5    
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vas3k_club
    ports:
      - "5432:5432"
    # network_mode: "host"

  redis:
    image: redis:alpine
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"